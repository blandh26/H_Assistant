//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace H_Assistant.DocUtils.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("H_Assistant.DocUtils.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] hhc {
            get {
                object obj = ResourceManager.GetObject("hhc", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] hhk {
            get {
                object obj = ResourceManager.GetObject("hhk", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] hhp {
            get {
                object obj = ResourceManager.GetObject("hhp", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///var hljs = {};
        ///// Convenience variables for build-in objects
        ///var ArrayProto = [],
        ///    objectKeys = Object.keys;
        ///
        ///// Global internal variables used within the highlight.js library.
        ///var languages = {},
        ///    aliases = {};
        ///
        ///// Regular expressions used throughout the highlight.js library.
        ///var noHighlightRe = /^(no-?highlight|plain|text)$/i,
        ///    languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i,
        ///    fixMarkupRe = /((^(&lt;[^&gt;]+&gt;|\t|)+|(?:\n)))/gm;
        ///
        ///var spanEndTag = &apos;&lt;/span&gt;&apos;;
        ///
        ///// Global options used when within exter [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string highlight {
            get {
                return ResourceManager.GetString("highlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] html {
            get {
                object obj = ResourceManager.GetObject("html", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 /*! jQuery v1.7 jquery.com | jquery.org/license */
        ///(function (a, b) {
        ///    function cA(a) { return f.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1 } function cx(a) { if (!cm[a]) { var b = c.body, d = f(&quot;&lt;&quot; + a + &quot;&gt;&quot;).appendTo(b), e = d.css(&quot;display&quot;); d.remove(); if (e === &quot;none&quot; || e === &quot;&quot;) { cn || (cn = c.createElement(&quot;iframe&quot;), cn.frameBorder = cn.width = cn.height = 0), b.appendChild(cn); if (!co || !cn.createElement) co = (cn.contentWindow || cn.contentDocument).document, c [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string jQuery {
            get {
                return ResourceManager.GetString("jQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] list {
            get {
                object obj = ResourceManager.GetObject("list", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] msyh {
            get {
                object obj = ResourceManager.GetObject("msyh", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 !function (t, n) { &quot;object&quot; == typeof exports &amp;&amp; &quot;object&quot; == typeof module ? module.exports = n() : &quot;function&quot; == typeof define &amp;&amp; define.amd ? define([], n) : &quot;object&quot; == typeof exports ? exports.sqlFormatter = n() : t.sqlFormatter = n() }
        ///    (this, function () {
        ///    return function (t) { function n(r) { if (e[r]) return e[r].exports; var u = e[r] = { exports: {}, id: r, loaded: !1 }; return t[r].call(u.exports, u, u.exports, n), u.loaded = !0, u.exports } var e = {}; return n.m = t, n.c = e, n.p = &quot;&quot;, n( [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string sql_formatter {
            get {
                return ResourceManager.GetString("sql_formatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] sqlcode {
            get {
                object obj = ResourceManager.GetObject("sqlcode", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] table {
            get {
                object obj = ResourceManager.GetObject("table", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
